/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package otherPackages;

import com.unioncomm.sdk.bsp.UCBioBSPJNI;
import com.unioncomm.sdk.bsp.UCBioBSPJNI.*;

/**
 *
 * @author diegomichel
 */
public final class NewFingerReader extends javax.swing.JFrame {

    private UCBioBSPJNI bsp;
    WINDOW_OPTION wOptions;
    String huella = "";

    /**
     * Creates new form NewFingerReader
     */
    public NewFingerReader() {
        initComponents();
        inicializaLibreriaDelSensor();
        inicializaSensor();

    }

    public void inicializaLibreriaDelSensor() {
        bsp = new UCBioBSPJNI();

        if (bsp.IsErrorOccured()) {
            System.out.println(bsp.GetErrorCode());
            return;
        }

        UCBioBSPJNI.INIT_INFO_0 initInfo0 = bsp.new INIT_INFO_0();
        bsp.GetInitInfo(initInfo0);
        System.out.println("InitInfo :");
        System.out.println(" MaxFingersForEnroll : " + initInfo0.MaxFingersForEnroll);
        System.out.println(" NecessaryEnrollNum : " + initInfo0.NecessaryEnrollNum);
        System.out.println(" SamplesPerFinger : " + initInfo0.SamplesPerFinger);
        System.out.println(" DefaultTimeout : " + initInfo0.DefaultTimeout);
        System.out.println(" SecurityLevelForEnroll : " + initInfo0.SecurityLevelForEnroll);
        System.out.println(" SecurityLevelForVerify : " + initInfo0.SecurityLevelForVerify);
        System.out.println(" SecurityLevelForIdentify : " + initInfo0.SecurityLevelForIdentify);
        System.out.println("");

        System.out.println("SDK version: " + bsp.GetVersion());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        c = new java.awt.Canvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton1.setText("Capturar Huella");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Verificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(283, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (bsp != null) {
            bsp.dispose();
            bsp = null;
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        UCBioBSPJNI.FIR_HANDLE hFIR = bsp.new FIR_HANDLE();
        UCBioBSPJNI.FIR_TEXTENCODE textFir = bsp.new FIR_TEXTENCODE();
        
        UCBioBSPJNI.FIR_PAYLOAD enrollPayload = bsp.new FIR_PAYLOAD();
	enrollPayload.SetText("22225255");
       

       // int ret = bsp.Capture(0x04, hFIR, -1, null, wOptions);
        int ret = bsp.Enroll(null, hFIR, enrollPayload, -1, null, wOptions);
        if (ret == 0) {
            System.out.println("Huella capturada");
            bsp.GetTextFIRFromHandle(hFIR, textFir);
            huella = textFir.TextFIR;
            System.out.println(huella);
            System.out.println(huella.length());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Boolean result = new Boolean(false); //Need to be defined as this or it will crash
        UCBioBSPJNI.FIR_HANDLE hFIR = bsp.new FIR_HANDLE();
        UCBioBSPJNI.FIR_TEXTENCODE textFir = bsp.new FIR_TEXTENCODE();
        
        wOptions.WindowStyle = 1;
        wOptions.FingerWnd = c;
        String jreBinPath = System.getProperty("java.home") + "\\bin";
	wOptions.JreBinPath = jreBinPath;
        wOptions.ParentWnd = this;
        
        

        int ret = bsp.Capture(0x01, hFIR, -1, null, wOptions);
        //bsp.Verify(hFIR, null, null, -1, null, winOption);
        
        if (ret == 0) {
            System.out.println("Huella capturada");
            textFir.TextFIR = huella;

            UCBioBSPJNI.INPUT_FIR inputFIRStored = bsp.new INPUT_FIR();
            inputFIRStored.SetTextFIR(textFir);
            System.out.println("Line 1");

            UCBioBSPJNI.INPUT_FIR inputFIRProcessed = bsp.new INPUT_FIR();
            inputFIRProcessed.SetFIRHandle(hFIR);
            System.out.println("Line 2");
            
            UCBioBSPJNI.FIR_PAYLOAD payload = bsp.new FIR_PAYLOAD();

           // bsp.Verify(inputFIR, bResult, payload, -1, null, null);
            int returns = bsp.Verify(inputFIRStored, result, payload);
            
            if (returns == 0) {
                if (result) {
                    System.out.println("true"+payload.GetText());
                    
                } else {
                    System.out.println("false");
                }
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewFingerReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewFingerReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewFingerReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewFingerReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewFingerReader().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas c;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
    private void inicializaSensor() {
        UCBioBSPJNI.DEVICE_ENUM_INFO device_enum_info = bsp.new DEVICE_ENUM_INFO();
        int SetSkinResource = bsp.SetSkinResource("UCBioBSPSkin_Spanish.dll");
        if (SetSkinResource == 1) {
            //All fine
        } else {
            System.out.println("Some error... add skin dlls directory to your PATH system var.");
        }

        wOptions = bsp.new WINDOW_OPTION();
        wOptions.WindowStyle = (0x00010000) | (0x00020000);
        //wOptions.CaptionMsg = "Mensaje en caption";
        //wOptions.CancelMsg = "Mensaje cancelar";

        int error = bsp.EnumerateDevice(device_enum_info);
        if (error == 1) {
            System.out.println("error al crear lista de dipositivos");
        }
        bsp.OpenDevice();
        bsp.SetAutoDetect(1);

        /*int ret = bsp.Enroll(null, hFIR, enrollPayload, -1, null, wOptions);
         if(ret==0)
         {
         bsp.GetTextFIRFromHandle(hFIR, textFir);
         System.out.println(textFir.TextFIR);
         }*/
        //int ret = bsp.Enroll(null, hFIR, enrollPayload, -1, null, null);
    }
}
